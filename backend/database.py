import sqlite3

DATABASE_FILE = "backend/fantasy_board.db"

def create_connection():
    """Create a database connection to the SQLite database."""
    conn = None
    try:
        conn = sqlite3.connect(DATABASE_FILE)
        conn.row_factory = sqlite3.Row
    except sqlite3.Error as e:
        print(f"Database connection error: {e}")
    return conn

def create_table():
    """Create the images table with the full schema if it doesn't exist."""
    conn = create_connection()
    if conn is not None:
        try:
            cursor = conn.cursor()
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS images (
                    hash TEXT PRIMARY KEY,
                    filename TEXT NOT NULL,
                    title TEXT NOT NULL,
                    caption TEXT NOT NULL,
                    art_style TEXT,
                    fantasy_mood TEXT,
                    fantasy_scale TEXT,
                    magic_level TEXT,
                    tags TEXT,
                    dominant_colors TEXT,
                    detail_score INTEGER,
                    mood_score INTEGER,
                    scale_score INTEGER,
                    magic_score INTEGER
                );
            """)
            conn.commit()
            print("Database table created or already exists.")
        except sqlite3.Error as e:
            print(f"Error creating table: {e}")
        finally:
            conn.close()

def create_audio_table():
    """Create the audio table if it doesn't exist."""
    conn = create_connection()
    if conn is not None:
        try:
            cursor = conn.cursor()
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS audio (
                    filename TEXT PRIMARY KEY,
                    title TEXT,
                    mood TEXT,        -- e.g., 'Epic', 'Somber', 'Mysterious'
                    genre TEXT,       -- e.g., 'Orchestral', 'Ambient', 'Folk'
                    instruments TEXT, -- e.g., 'Strings,Horns,Drums'
                    description TEXT, -- A detailed description generated by the AI
                    embedding BLOB    -- To store the vector embedding
                );
            """)
            conn.commit()
            print("Audio table created or already exists.")
        except sqlite3.Error as e:
            print(f"Error creating audio table: {e}")
        finally:
            conn.close()

# Run this once to initialize the database file and table
if __name__ == '__main__':
    create_table()
    create_audio_table()